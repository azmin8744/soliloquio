input AddPostInput {
	title: String!
	content: String!
	isPublished: Boolean
}

type AuthError {
	message: String!
}

type AuthorizedUser {
	token: String!
	refreshToken: String!
}


input ChangePasswordInput {
	currentPassword: String!
	newPassword: String!
}

type DbError {
	message: String!
}

input DeletePostInput {
	id: UUID!
}

type DeletedPost {
	id: UUID!
}




type Mutations {
	addPost(newPost: AddPostInput!): PostMutationResult!
	updatePost(post: UpdatePostInput!): PostMutationResult!
	deletePost(post: DeletePostInput!): PostMutationResult!
	signUp(input: SignUpInput!): UserMutationResult!
	signIn(input: SignInInput!): UserMutationResult!
	refreshAccessToken(refreshToken: String!): UserMutationResult!
	logout(refreshToken: String!): Boolean!
	logoutAllDevices(accessToken: String!): Boolean!
	changePassword(input: ChangePasswordInput!): UserMutationResult!
}

"""
ISO 8601 combined date and time without timezone.

# Examples

* `2015-07-01T08:59:60.123`,
"""
scalar NaiveDateTime

type PasswordChangeSuccess {
	message: String!
}

type Post {
	id: UUID!
	title: String!
	isPublished: Boolean!
	firstPublishedAt: NaiveDateTime
	createdAt: NaiveDateTime
	updatedAt: NaiveDateTime
	"""
	Returns the original markdown content for editing
	"""
	markdownContent: String!
	"""
	Returns the rendered HTML content for display
	"""
	content: String!
}

union PostMutationResult = Post | DeletedPost | DbError | AuthError

type Queries {
	"""
	Get the currently authenticated user's profile
	"""
	me: User
	"""
	Get all posts for the authenticated user
	"""
	posts: [Post!]!
	"""
	Get a specific post by ID for the authenticated user
	"""
	post(id: UUID!): Post
}

input SignInInput {
	email: String!
	password: String!
}

input SignUpInput {
	email: String!
	password: String!
}


type Subscriptions {
	values: Int!
}

"""
A UUID is a unique 128-bit number, stored as 16 octets. UUIDs are parsed as
Strings within GraphQL. UUIDs are used to assign unique identifiers to
entities without requiring a central allocating authority.

# References

* [Wikipedia: Universally Unique Identifier](http://en.wikipedia.org/wiki/Universally_unique_identifier)
* [RFC4122: A Universally Unique IDentifier (UUID) URN Namespace](http://tools.ietf.org/html/rfc4122)
"""
scalar UUID

input UpdatePostInput {
	id: UUID!
	title: String!
	content: String!
	isPublished: Boolean
}

type User {
	id: UUID!
	email: String!
	createdAt: NaiveDateTime
	updatedAt: NaiveDateTime
}

union UserMutationResult = AuthorizedUser | ValidationErrorType | DbError | AuthError | PasswordChangeSuccess

type ValidationErrorType {
	message: String!
}

directive @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
directive @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
directive @specifiedBy(url: String!) on SCALAR
schema {
	query: Queries
	mutation: Mutations
	subscription: Subscriptions
}

